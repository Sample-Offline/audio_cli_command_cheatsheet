---------------------------------------------------------------------------------
###################
### sox Audio Stats
###################

# 1. audio stats
# Length                length of the audio file in seconds
# Scaled                by what the input is scaled by. By default 2^31-1, to go from 32-bit signed integer to [-1, 1]
# Maximum amplitude     maximum sample value
# Minimum amplitude     minimum sample value
# Midline amplitude     aka mid-range, midpoint between the max and minimum values.
# Mean norm             arithmetic mean of samples' absolute values
# Mean amplitude        arithmetic mean of samples' values
# RMS amplitude         root mean square, root of squared values' mean
# Maximum delta         maximum difference between two successive samples
# Minimum delta         minimum difference between two successive samples
# Mean delta            arithmetic mean of differences between successive samples
# RMS delta             root mean square of differences between successive samples
# Rough frequency       estimation of the input file's frequency, in hertz. unsure of method used
# Volume adjustment     value that should be sent to -v so peak absolute amplitude is 1
sox example.wav -n stat

# 2. Sample rate and stuff
sox --i example.wav


---------------------------------------------------------------------------------
###################
### Unpack Ableton .als
###################
gzip -cd MySong.als > MySong.xml


---------------------------------------------------------------------------------
###################
### Find
###################

# Will find all directories containing a filetype
find / -type f -name '*.wav' -o -name '*.mp3' -o -name '*.aif' -o -name '*.ogg' -o -name '*.flac' -o -name '*.m4a' -o -name '*.pcm'    | sed -E 's|/[^/]+$||' |sort -u

# Find Ableton-specific file types: .adg, .alp, .als
# Locations
# - /Volumes/Bodlein
# - /Volumes/Bodlein 1
# - /Volumes/Wren
# - /Volumes/Music USB
find / -type f -name '*.adg' -o -name '*.alp' -o -name '*.als' | sed -E 's|/[^/]+$||' |sort -u

###################
### mdfind
###################
# mdfind can be used to quickly search for a file type
mdfind -image
mdfind -audio


---------------------------------------------------------------------------------
###################
### afconvert
###################

# Unwrap/convert files from format to format
afconvert -f WAVE -d LEI32 MyAudio.m4a -o MyAudio.wav

###################
### sox
###################

# Unwrap .wav to .raw using
# -c is channels
# -b is bits
# -r is bitrate
sox -r 44100 -e unsigned -b 8 -c 1 <RAW_FILE> <TARGET_FILE>


###################
### ffmpeg
###################
# Convert audio file from one format to another

# The following command keeps high quality on .mp3 (320 kbps), and metadata from
# .flac file are converted to ID3v2 format, which can be included in .mp3 files:
ffmpeg -i input.flac -ab 320k -map_metadata 0 -id3v2_version 3 output.mp3

# Convert .wav to .flac
ffmpeg -i input.wav -map_metadata 0 -id3v2_version 3 output.flac
# Or anything to .mp3
ffmpeg -i infile.mp4 -ab 320k -map_metadata 0 -id3v2_version 3 outfile.mp3

# Preserves metadata
# (This maps both the global as well as stream metadata.)
ffmpeg -n -i $INFILE -c:a libmp3lame -q:a 1 -ar 44100 -map_metadata 0 -map_metadata 0:s:0 -id3v2_version 3 -vn $OUTFILE.mp3

# Convert video to audio
ffmpeg -i input-video.avi -vn -acodec copy output-audio.aac/Users/patricks/Movies/Screen\ Recording\ 2023-07-24\ at\ 12.04.00\ PM.mov

# You can also batch convert with subdirs. Use the following (untested)
find . -exec ffmpeg -i {} {}.mp3 \;


---------------------------------------------------------------------------------
###################
### Strip EXIF data (requires imagemagick)
###################

# Strip EXIF data
convert file.jpg -strip file.jpg


---------------------------------------------------------------------------------
###################
### Convert .EPS file to .SHP file
###################
# Useful for converting Grapher lines or other vectors to .shp files for LFO curves
ogr2ogr -f "ESRI Shapefile" output.shp input.eps


---------------------------------------------------------------------------------
###################
### bpm-tools
###################

# Incoming audio is raw audio on stdin at 44100Hz, mono, 32-bit float; eg.
sox file.mp3 -t raw -r 44100 -e float -c 1 - | ./bpm

# To view autodifference or energy data:
#   sox [...] | bpm -g file.dat
#   gnuplot
#     gnuplot> plot "file.dat"

# Example:
sox -v 0.99 /Users/patrickschreiber/Music/Constable\ ref\ tracks/15637543_Sperm_\(Original\ Mix\).mp3 -t raw -r 44100 -e float -c 1 - | ./bpm -fv -m 20 -x 666 -g ~/Desktop/bpm-tools_Sperm-audiodiff.dat -e ~/Desktop/bpm-tools_Sperm-energydata.dat


---------------------------------------------------------------------------------
###################
### Format a drive for CDJ-2000
###################
# HFS+ has advantages over FAT/FAT32 since the partition size can safely approach
# 2TB without consequence, and the CDJ-2000 supports the format all the same.
# Make sure journaling is enabled, so I guess JHFS+

# No need for EFI since it's not a boot drive.
diskutil partitionDisk -noEFI /dev/disk4 GPT jhfs+ VOLUME_NAME VOLUME_SIZE(use diskutil list)
# Ex.
diskutil partitionDisk -noEFI /dev/disk4 GPT jhfs+ AN_ELLIPSIS 15.5g

# Then ensure it's journaled for better error recovery.
diskutil enableJournal /dev/disk4s1 # make sure to grab the correct partition mount point
